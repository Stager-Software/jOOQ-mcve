/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.kotlin.mysql.keys


import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.mcve.kotlin.mysql.tables.Account
import org.jooq.mcve.kotlin.mysql.tables.Organization
import org.jooq.mcve.kotlin.mysql.tables.Test
import org.jooq.mcve.kotlin.mysql.tables.User
import org.jooq.mcve.kotlin.mysql.tables.Userpreference
import org.jooq.mcve.kotlin.mysql.tables.UserpreferenceSchedulefilteruser
import org.jooq.mcve.kotlin.mysql.tables.records.AccountRecord
import org.jooq.mcve.kotlin.mysql.tables.records.OrganizationRecord
import org.jooq.mcve.kotlin.mysql.tables.records.TestRecord
import org.jooq.mcve.kotlin.mysql.tables.records.UserRecord
import org.jooq.mcve.kotlin.mysql.tables.records.UserpreferenceRecord
import org.jooq.mcve.kotlin.mysql.tables.records.UserpreferenceSchedulefilteruserRecord



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val KEY_ACCOUNT_PRIMARY: UniqueKey<AccountRecord> = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("KEY_Account_PRIMARY"), arrayOf(Account.ACCOUNT.ID), true)
val KEY_ACCOUNT_UIX_ACCOUNT__EMAILADDRESS__ORGANIZATION_ID__ACTIVE: UniqueKey<AccountRecord> = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("KEY_Account_UIX_Account__emailAddress__organization_id__active"), arrayOf(Account.ACCOUNT.EMAILADDRESS, Account.ACCOUNT.ORGANIZATION_ID), true)
val KEY_ORGANIZATION_PRIMARY: UniqueKey<OrganizationRecord> = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("KEY_Organization_PRIMARY"), arrayOf(Organization.ORGANIZATION.ID), true)
val KEY_TEST_PRIMARY: UniqueKey<TestRecord> = Internal.createUniqueKey(Test.TEST, DSL.name("KEY_test_PRIMARY"), arrayOf(Test.TEST.ID), true)
val KEY_USER_PRIMARY: UniqueKey<UserRecord> = Internal.createUniqueKey(User.USER, DSL.name("KEY_User_PRIMARY"), arrayOf(User.USER.ID), true)
val KEY_USER_UIX_USER__ACCOUNT_ID: UniqueKey<UserRecord> = Internal.createUniqueKey(User.USER, DSL.name("KEY_User_UIX_User__account_id"), arrayOf(User.USER.ACCOUNT_ID), true)
val KEY_USERPREFERENCE_PRIMARY: UniqueKey<UserpreferenceRecord> = Internal.createUniqueKey(Userpreference.USERPREFERENCE, DSL.name("KEY_UserPreference_PRIMARY"), arrayOf(Userpreference.USERPREFERENCE.ID), true)
val KEY_USERPREFERENCE_UIX_USERPREFERENCE__USER_ID: UniqueKey<UserpreferenceRecord> = Internal.createUniqueKey(Userpreference.USERPREFERENCE, DSL.name("KEY_UserPreference_UIX_UserPreference__user_id"), arrayOf(Userpreference.USERPREFERENCE.USER_ID), true)
val KEY_USERPREFERENCE_SCHEDULEFILTERUSER_PRIMARY: UniqueKey<UserpreferenceSchedulefilteruserRecord> = Internal.createUniqueKey(UserpreferenceSchedulefilteruser.USERPREFERENCE_SCHEDULEFILTERUSER, DSL.name("KEY_UserPreference_ScheduleFilterUser_PRIMARY"), arrayOf(UserpreferenceSchedulefilteruser.USERPREFERENCE_SCHEDULEFILTERUSER.USERPREFERENCE_ID, UserpreferenceSchedulefilteruser.USERPREFERENCE_SCHEDULEFILTERUSER.USER_ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val FK_ACCOUNT__ORGANIZATION_ID: ForeignKey<AccountRecord, OrganizationRecord> = Internal.createForeignKey(Account.ACCOUNT, DSL.name("FK_Account__organization_id"), arrayOf(Account.ACCOUNT.ORGANIZATION_ID), org.jooq.mcve.kotlin.mysql.keys.KEY_ORGANIZATION_PRIMARY, arrayOf(Organization.ORGANIZATION.ID), true)
val FK_USER__ORGANIZATION_ID: ForeignKey<UserRecord, OrganizationRecord> = Internal.createForeignKey(User.USER, DSL.name("FK_User__organization_id"), arrayOf(User.USER.ORGANIZATION_ID), org.jooq.mcve.kotlin.mysql.keys.KEY_ORGANIZATION_PRIMARY, arrayOf(Organization.ORGANIZATION.ID), true)
val FK_USERPREFERENCE__ORGANIZATION_ID: ForeignKey<UserpreferenceRecord, OrganizationRecord> = Internal.createForeignKey(Userpreference.USERPREFERENCE, DSL.name("FK_UserPreference__organization_id"), arrayOf(Userpreference.USERPREFERENCE.ORGANIZATION_ID), org.jooq.mcve.kotlin.mysql.keys.KEY_ORGANIZATION_PRIMARY, arrayOf(Organization.ORGANIZATION.ID), true)
val FK_USERPREFERENCE__USER_ID: ForeignKey<UserpreferenceRecord, UserRecord> = Internal.createForeignKey(Userpreference.USERPREFERENCE, DSL.name("FK_UserPreference__user_id"), arrayOf(Userpreference.USERPREFERENCE.USER_ID), org.jooq.mcve.kotlin.mysql.keys.KEY_USER_PRIMARY, arrayOf(User.USER.ID), true)
val FK_USERPREFERENCE_SCHEDULEFILTERUSER__USER_ID: ForeignKey<UserpreferenceSchedulefilteruserRecord, UserRecord> = Internal.createForeignKey(UserpreferenceSchedulefilteruser.USERPREFERENCE_SCHEDULEFILTERUSER, DSL.name("FK_UserPreference_ScheduleFilterUser__user_id"), arrayOf(UserpreferenceSchedulefilteruser.USERPREFERENCE_SCHEDULEFILTERUSER.USER_ID), org.jooq.mcve.kotlin.mysql.keys.KEY_USER_PRIMARY, arrayOf(User.USER.ID), true)
val FK_USERPREFERENCE_SCHEDULEFILTERUSER__USERPREFERENCE_ID: ForeignKey<UserpreferenceSchedulefilteruserRecord, UserpreferenceRecord> = Internal.createForeignKey(UserpreferenceSchedulefilteruser.USERPREFERENCE_SCHEDULEFILTERUSER, DSL.name("FK_UserPreference_ScheduleFilterUser__userPreference_id"), arrayOf(UserpreferenceSchedulefilteruser.USERPREFERENCE_SCHEDULEFILTERUSER.USERPREFERENCE_ID), org.jooq.mcve.kotlin.mysql.keys.KEY_USERPREFERENCE_PRIMARY, arrayOf(Userpreference.USERPREFERENCE.ID), true)
