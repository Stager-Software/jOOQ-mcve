/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.kotlin.mysql.tables.records


import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.mcve.kotlin.mysql.tables.Organization


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OrganizationRecord() : UpdatableRecordImpl<OrganizationRecord>(Organization.ORGANIZATION) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var createdat: LocalDateTime?
        set(value): Unit = set(1, value)
        get(): LocalDateTime? = get(1) as LocalDateTime?

    open var modifiedat: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var name: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised OrganizationRecord
     */
    constructor(id: Long? = null, createdat: LocalDateTime? = null, modifiedat: LocalDateTime? = null, name: String? = null): this() {
        this.id = id
        this.createdat = createdat
        this.modifiedat = modifiedat
        this.name = name
        resetChangedOnNotNull()
    }
}
